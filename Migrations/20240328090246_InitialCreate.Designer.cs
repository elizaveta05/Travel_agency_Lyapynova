// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Travel_agency_Lyapynova.Models;

#nullable disable

namespace Travel_agency_Lyapynova.Migrations
{
    [DbContext(typeof(TravelAgentsPr21101LyapynovaContext))]
    [Migration("20240328090246_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("city_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CityId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("CityId")
                        .HasName("cities_pkey");

                    b.HasIndex("CountryId");

                    b.ToTable("cities", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.CooperationAgreement", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("contract_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContractId"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer")
                        .HasColumnName("supplier_id");

                    b.HasKey("ContractId")
                        .HasName("cooperation_agreement_pkey");

                    b.HasIndex("SupplierId");

                    b.ToTable("cooperation_agreement", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("CountryId")
                        .HasName("countries_pkey");

                    b.ToTable("countries", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("employee_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("patronymic");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("phone_number");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer")
                        .HasColumnName("position_id");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("surname");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("EmployeeId")
                        .HasName("employees_pkey");

                    b.HasIndex("PositionId");

                    b.HasIndex("UserId");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Excursion", b =>
                {
                    b.Property<int>("ExcursionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("excursion_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExcursionId"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("city_id");

                    b.Property<string>("CompanyNumberPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("company_number_phone");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money")
                        .HasColumnName("cost");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("ExcursionId")
                        .HasName("excursions_pkey");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("excursions", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.ExcursionsOrder", b =>
                {
                    b.Property<int>("ExcursionOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("excursion_order_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExcursionOrderId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("integer")
                        .HasColumnName("contract_id");

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("date")
                        .HasColumnName("date_order");

                    b.Property<int>("ExcursionId")
                        .HasColumnType("integer")
                        .HasColumnName("excursion_id");

                    b.HasKey("ExcursionOrderId")
                        .HasName("excursions_order_pkey");

                    b.HasIndex("ContractId");

                    b.HasIndex("ExcursionId");

                    b.ToTable("excursions_order", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.History", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("history_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HistoryId"));

                    b.Property<int>("KlientId")
                        .HasColumnType("integer")
                        .HasColumnName("klient_id");

                    b.Property<int>("СontractId")
                        .HasColumnType("integer")
                        .HasColumnName("Сontract_id");

                    b.HasKey("HistoryId")
                        .HasName("history_pkey");

                    b.HasIndex("KlientId");

                    b.HasIndex("СontractId");

                    b.ToTable("history", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.HistoryRegistration", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("history_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HistoryId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("integer")
                        .HasColumnName("registration_id");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.HasKey("HistoryId")
                        .HasName("history_registration_pkey");

                    b.HasIndex("RegistrationId");

                    b.HasIndex("StatusId");

                    b.ToTable("history_registration", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("hotel_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HotelId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("address");

                    b.Property<int>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("city_id");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money")
                        .HasColumnName("cost");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Stars")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("stars");

                    b.HasKey("HotelId")
                        .HasName("hotels_pkey");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("hotels", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Klient", b =>
                {
                    b.Property<int>("KlientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("klient_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KlientId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("passport_number");

                    b.Property<string>("PassportSerias")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("passport_serias");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("patronymic");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("surname");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("KlientId")
                        .HasName("klients_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("klients", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("payment_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("integer")
                        .HasColumnName("contract_id");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money")
                        .HasColumnName("cost");

                    b.Property<DateOnly>("DateOfPayment")
                        .HasColumnType("date")
                        .HasColumnName("date_of_payment");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("integer")
                        .HasColumnName("payment_method_id");

                    b.HasKey("PaymentId")
                        .HasName("payments_pkey");

                    b.HasIndex("ContractId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("payments", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("payment_method_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("PaymentMethodId")
                        .HasName("payment_method_pkey");

                    b.ToTable("payment_method", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("position_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PositionId"));

                    b.Property<string>("NamePositions")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name_positions");

                    b.HasKey("PositionId")
                        .HasName("positions_pkey");

                    b.ToTable("positions", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.RegistrationOfDocument", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("registration_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RegistrationId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("integer")
                        .HasColumnName("contract_id");

                    b.Property<DateOnly>("DateOfApplication")
                        .HasColumnType("date")
                        .HasColumnName("date_of_application");

                    b.Property<DateOnly>("DateOfReceipt")
                        .HasColumnType("date")
                        .HasColumnName("date_of_receipt");

                    b.HasKey("RegistrationId")
                        .HasName("registration_of_documents_pkey");

                    b.HasIndex("ContractId");

                    b.ToTable("registration_of_documents", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.RegistrationOfInsurance", b =>
                {
                    b.Property<int>("RegistrationInsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("registration_insurance_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RegistrationInsuranceId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<int>("RegistationId")
                        .HasColumnType("integer")
                        .HasColumnName("registation_id");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<int>("TypeInsuranceId")
                        .HasColumnType("integer")
                        .HasColumnName("type_insurance_id");

                    b.HasKey("RegistrationInsuranceId")
                        .HasName("registration_of_insurance_pkey");

                    b.HasIndex("CountryId");

                    b.HasIndex("RegistationId");

                    b.HasIndex("TypeInsuranceId");

                    b.ToTable("registration_of_insurance", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Representative", b =>
                {
                    b.Property<int>("RepresentativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("representative_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RepresentativeId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("patronymic");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("surname");

                    b.Property<int>("TourId")
                        .HasColumnType("integer")
                        .HasColumnName("tour_id");

                    b.HasKey("RepresentativeId")
                        .HasName("representatives_pkey");

                    b.HasIndex("TourId");

                    b.ToTable("representatives", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("reservation_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("integer")
                        .HasColumnName("contract_id");

                    b.Property<DateOnly>("DateReservation")
                        .HasColumnType("date")
                        .HasColumnName("date_reservation");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<int>("HotelId")
                        .HasColumnType("integer")
                        .HasColumnName("hotel_id");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<int>("TourId")
                        .HasColumnType("integer")
                        .HasColumnName("tour_id");

                    b.Property<int>("TransportId")
                        .HasColumnType("integer")
                        .HasColumnName("transport_id");

                    b.HasKey("ReservationId")
                        .HasName("reservations_pkey");

                    b.HasIndex("ContractId");

                    b.HasIndex("HotelId");

                    b.HasIndex("TourId");

                    b.HasIndex("TransportId");

                    b.ToTable("reservations", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.ServiceAgreement", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("contract_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContractId"));

                    b.Property<string>("Conditions")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("conditions");

                    b.Property<DateOnly>("DateOfConclusion")
                        .HasColumnType("date")
                        .HasColumnName("date_of_conclusion");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employee_id");

                    b.Property<int>("KlientId")
                        .HasColumnType("integer")
                        .HasColumnName("klient_id");

                    b.HasKey("ContractId")
                        .HasName("service_agreements_pkey");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("KlientId");

                    b.ToTable("service_agreements", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.StatusRegistration", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("StatusId")
                        .HasName("status_registration_pkey");

                    b.ToTable("status_registration", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("supplier_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("phone_number");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("SupplierId")
                        .HasName("suppliers_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("suppliers", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tour_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TourId"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("city_id");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money")
                        .HasColumnName("cost");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descriptions");

                    b.Property<int>("Duration")
                        .HasColumnType("integer")
                        .HasColumnName("duration");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer")
                        .HasColumnName("supplier_id");

                    b.HasKey("TourId")
                        .HasName("tours_pkey");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("tours", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Transfer", b =>
                {
                    b.Property<int>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transfer_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransferId"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("company");

                    b.Property<string>("CompanyNumberPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("company_number_phone");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money")
                        .HasColumnName("cost");

                    b.Property<int>("TypeTransportId")
                        .HasColumnType("integer")
                        .HasColumnName("type_transport_id");

                    b.HasKey("TransferId")
                        .HasName("transfer_pkey");

                    b.HasIndex("TypeTransportId");

                    b.ToTable("transfer", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.TransferOrder", b =>
                {
                    b.Property<int>("TransferOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transfer_order_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransferOrderId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("integer")
                        .HasColumnName("contract_id");

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("date")
                        .HasColumnName("date_order");

                    b.Property<int>("TransferId")
                        .HasColumnType("integer")
                        .HasColumnName("transfer_id");

                    b.HasKey("TransferOrderId")
                        .HasName("transfer_order_pkey");

                    b.HasIndex("ContractId");

                    b.HasIndex("TransferId");

                    b.ToTable("transfer_order", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Transport", b =>
                {
                    b.Property<int>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transport_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransportId"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("company");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money")
                        .HasColumnName("cost");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("flight_number");

                    b.Property<int>("TypeTransportId")
                        .HasColumnType("integer")
                        .HasColumnName("type_transport_id");

                    b.HasKey("TransportId")
                        .HasName("transport_pkey");

                    b.HasIndex("TypeTransportId");

                    b.ToTable("transport", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.TypeOfInsurance", b =>
                {
                    b.Property<int>("TypeInsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("type_insurance_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeInsuranceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("TypeInsuranceId")
                        .HasName("type_of_insurance_pkey");

                    b.ToTable("type_of_insurance", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.TypeOfTransport", b =>
                {
                    b.Property<int>("TypeTransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("type_transport_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeTransportId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("TypeTransportId")
                        .HasName("type_of_transport_pkey");

                    b.ToTable("type_of_transport", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.TypeOfVisa", b =>
                {
                    b.Property<int>("TypeVisaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("type_visa_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeVisaId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("TypeVisaId")
                        .HasName("type_of_visa_pkey");

                    b.ToTable("type_of_visa", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("password");

                    b.HasKey("UserId")
                        .HasName("users_pkey");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.VisaProcessing", b =>
                {
                    b.Property<int>("VisaProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("visa_process_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VisaProcessId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<int>("RegistationId")
                        .HasColumnType("integer")
                        .HasColumnName("registation_id");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<int>("TypeVisa")
                        .HasColumnType("integer")
                        .HasColumnName("type_visa");

                    b.HasKey("VisaProcessId")
                        .HasName("visa_processing_pkey");

                    b.HasIndex("CountryId");

                    b.HasIndex("RegistationId");

                    b.HasIndex("TypeVisa");

                    b.ToTable("visa_processing", (string)null);
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.City", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("cities_country_id_fkey");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.CooperationAgreement", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.Supplier", "Supplier")
                        .WithMany("CooperationAgreements")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("cooperation_agreement_supplier_id_fkey");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Employee", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .IsRequired()
                        .HasConstraintName("employees_position_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.User", "User")
                        .WithMany("Employees")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("employees_user_id_fkey");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Excursion", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.City", "City")
                        .WithMany("Excursions")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("city");

                    b.HasOne("Travel_agency_Lyapynova.Models.Country", "Country")
                        .WithMany("Excursions")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("country");

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.ExcursionsOrder", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.ServiceAgreement", "Contract")
                        .WithMany("ExcursionsOrders")
                        .HasForeignKey("ContractId")
                        .IsRequired()
                        .HasConstraintName("excursions_order_contract_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.Excursion", "Excursion")
                        .WithMany("ExcursionsOrders")
                        .HasForeignKey("ExcursionId")
                        .IsRequired()
                        .HasConstraintName("excursions_order_excursion_id_fkey");

                    b.Navigation("Contract");

                    b.Navigation("Excursion");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.History", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.Klient", "Klient")
                        .WithMany("Histories")
                        .HasForeignKey("KlientId")
                        .IsRequired()
                        .HasConstraintName("history_klient_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.ServiceAgreement", "Сontract")
                        .WithMany("Histories")
                        .HasForeignKey("СontractId")
                        .IsRequired()
                        .HasConstraintName("history_Сontract_id_fkey");

                    b.Navigation("Klient");

                    b.Navigation("Сontract");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.HistoryRegistration", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.RegistrationOfDocument", "Registration")
                        .WithMany("HistoryRegistrations")
                        .HasForeignKey("RegistrationId")
                        .IsRequired()
                        .HasConstraintName("history_registration_registration_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.StatusRegistration", "Status")
                        .WithMany("HistoryRegistrations")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("history_registration_status_id_fkey");

                    b.Navigation("Registration");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Hotel", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("city");

                    b.HasOne("Travel_agency_Lyapynova.Models.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("country");

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Klient", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.User", "User")
                        .WithMany("Klients")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("klients_user_id_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Payment", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.ServiceAgreement", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("ContractId")
                        .IsRequired()
                        .HasConstraintName("payments_contract_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodId")
                        .IsRequired()
                        .HasConstraintName("payments_payment_method_id_fkey");

                    b.Navigation("Contract");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.RegistrationOfDocument", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.ServiceAgreement", "Contract")
                        .WithMany("RegistrationOfDocuments")
                        .HasForeignKey("ContractId")
                        .IsRequired()
                        .HasConstraintName("registration_of_documents_contract_id_fkey");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.RegistrationOfInsurance", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.Country", "Country")
                        .WithMany("RegistrationOfInsurances")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("registration_of_insurance_country_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.RegistrationOfDocument", "Registation")
                        .WithMany("RegistrationOfInsurances")
                        .HasForeignKey("RegistationId")
                        .IsRequired()
                        .HasConstraintName("registration_of_insurance_registation_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.TypeOfInsurance", "TypeInsurance")
                        .WithMany("RegistrationOfInsurances")
                        .HasForeignKey("TypeInsuranceId")
                        .IsRequired()
                        .HasConstraintName("registration_of_insurance_type_insurance_id_fkey");

                    b.Navigation("Country");

                    b.Navigation("Registation");

                    b.Navigation("TypeInsurance");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Representative", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.Tour", "Tour")
                        .WithMany("Representatives")
                        .HasForeignKey("TourId")
                        .IsRequired()
                        .HasConstraintName("representatives_tour_id_fkey");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Reservation", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.ServiceAgreement", "Contract")
                        .WithMany("Reservations")
                        .HasForeignKey("ContractId")
                        .IsRequired()
                        .HasConstraintName("reservations_contract_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.Hotel", "Hotel")
                        .WithMany("Reservations")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("reservations_hotel_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.Tour", "Tour")
                        .WithMany("Reservations")
                        .HasForeignKey("TourId")
                        .IsRequired()
                        .HasConstraintName("reservations_tour_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.Transport", "Transport")
                        .WithMany("Reservations")
                        .HasForeignKey("TransportId")
                        .IsRequired()
                        .HasConstraintName("reservations_transport_id_fkey");

                    b.Navigation("Contract");

                    b.Navigation("Hotel");

                    b.Navigation("Tour");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.ServiceAgreement", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.Employee", "Employee")
                        .WithMany("ServiceAgreements")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("service_agreements_employee_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.Klient", "Klient")
                        .WithMany("ServiceAgreements")
                        .HasForeignKey("KlientId")
                        .IsRequired()
                        .HasConstraintName("service_agreements_klient_id_fkey");

                    b.Navigation("Employee");

                    b.Navigation("Klient");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Supplier", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.User", "User")
                        .WithMany("Suppliers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("suppliers_user_id_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Tour", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.City", "City")
                        .WithMany("Tours")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("tours_city_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.Country", "Country")
                        .WithMany("Tours")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("tours_country_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.Supplier", "Supplier")
                        .WithMany("Tours")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("tours_supplier_id_fkey");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Transfer", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.TypeOfTransport", "TypeTransport")
                        .WithMany("Transfers")
                        .HasForeignKey("TypeTransportId")
                        .IsRequired()
                        .HasConstraintName("transfer_type_transport_id_fkey");

                    b.Navigation("TypeTransport");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.TransferOrder", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.ServiceAgreement", "Contract")
                        .WithMany("TransferOrders")
                        .HasForeignKey("ContractId")
                        .IsRequired()
                        .HasConstraintName("transfer_order_contract_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.Transfer", "Transfer")
                        .WithMany("TransferOrders")
                        .HasForeignKey("TransferId")
                        .IsRequired()
                        .HasConstraintName("transfer_order_transfer_id_fkey");

                    b.Navigation("Contract");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Transport", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.TypeOfTransport", "TypeTransport")
                        .WithMany("Transports")
                        .HasForeignKey("TypeTransportId")
                        .IsRequired()
                        .HasConstraintName("transport_type_transport_id_fkey");

                    b.Navigation("TypeTransport");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.VisaProcessing", b =>
                {
                    b.HasOne("Travel_agency_Lyapynova.Models.Country", "Country")
                        .WithMany("VisaProcessings")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("visa_processing_country_id_fkey");

                    b.HasOne("Travel_agency_Lyapynova.Models.RegistrationOfDocument", "Registation")
                        .WithMany("VisaProcessings")
                        .HasForeignKey("RegistationId")
                        .IsRequired()
                        .HasConstraintName("registration");

                    b.HasOne("Travel_agency_Lyapynova.Models.TypeOfVisa", "TypeVisaNavigation")
                        .WithMany("VisaProcessings")
                        .HasForeignKey("TypeVisa")
                        .IsRequired()
                        .HasConstraintName("type");

                    b.Navigation("Country");

                    b.Navigation("Registation");

                    b.Navigation("TypeVisaNavigation");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.City", b =>
                {
                    b.Navigation("Excursions");

                    b.Navigation("Hotels");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Excursions");

                    b.Navigation("Hotels");

                    b.Navigation("RegistrationOfInsurances");

                    b.Navigation("Tours");

                    b.Navigation("VisaProcessings");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Employee", b =>
                {
                    b.Navigation("ServiceAgreements");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Excursion", b =>
                {
                    b.Navigation("ExcursionsOrders");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Hotel", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Klient", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("ServiceAgreements");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.RegistrationOfDocument", b =>
                {
                    b.Navigation("HistoryRegistrations");

                    b.Navigation("RegistrationOfInsurances");

                    b.Navigation("VisaProcessings");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.ServiceAgreement", b =>
                {
                    b.Navigation("ExcursionsOrders");

                    b.Navigation("Histories");

                    b.Navigation("Payments");

                    b.Navigation("RegistrationOfDocuments");

                    b.Navigation("Reservations");

                    b.Navigation("TransferOrders");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.StatusRegistration", b =>
                {
                    b.Navigation("HistoryRegistrations");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Supplier", b =>
                {
                    b.Navigation("CooperationAgreements");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Tour", b =>
                {
                    b.Navigation("Representatives");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Transfer", b =>
                {
                    b.Navigation("TransferOrders");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.Transport", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.TypeOfInsurance", b =>
                {
                    b.Navigation("RegistrationOfInsurances");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.TypeOfTransport", b =>
                {
                    b.Navigation("Transfers");

                    b.Navigation("Transports");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.TypeOfVisa", b =>
                {
                    b.Navigation("VisaProcessings");
                });

            modelBuilder.Entity("Travel_agency_Lyapynova.Models.User", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Klients");

                    b.Navigation("Suppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
